# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-09 21:52+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../doc/docs/how_to/deploy/hls.rst:20
msgid "HLS Backend Example"
msgstr "HLS 后端示例"

#: ../../doc/docs/how_to/deploy/hls.rst:22
msgid ""
"TVM supports Xilinx FPGA board with SDAccel.  Here is a tutorial for how "
"to deploy TVM to AWS F1 FPGA instance."
msgstr ""
"TVM 支持使用 SDAccel 的 Xilinx FPGA 板。以下是有关如何将 TVM 部署到 AWS F1 FPGA 实例的教程。"

#: ../../doc/docs/how_to/deploy/hls.rst:26
msgid ""
"This feature is still experimental.  We cannot use SDAccel to deploy an "
"end to end neural networks for now."
msgstr ""
"此功能仍处于实验阶段。目前，无法使用 SDAccel 部署端到端神经网络。"

#: ../../doc/docs/how_to/deploy/hls.rst:28
msgid "We use two python scripts for this tutorial."
msgstr "在本教程中使用两个 Python 脚本。"

#: ../../doc/docs/how_to/deploy/hls.rst:30
msgid "build.py - a script to synthesize FPGA bitstream."
msgstr "build.py - 用于合成 FPGA 比特流的脚本。"

#: ../../doc/docs/how_to/deploy/hls.rst:56
msgid "run.py - a script to use FPGA as an accelerator."
msgstr "run.py - 使用 FPGA 作为加速器的脚本。"

#: ../../doc/docs/how_to/deploy/hls.rst:85
msgid "Setup"
msgstr "安装"

#: ../../doc/docs/how_to/deploy/hls.rst:87
msgid ""
"Launch an instance using the FPGA Developer AMI.  We don't need an F1 "
"instance for emulation and synthesis, so it is recommended to use a lower"
" cost instance for them."
msgstr ""
"使用 FPGA 开发者 AMI 启动实例。不需要 F1 实例进行仿真和合成，因此建议使用成本较低的实例。"

#: ../../doc/docs/how_to/deploy/hls.rst:88
#: ../../doc/docs/how_to/deploy/hls.rst:162
msgid "Setup AWS FPGA development kit."
msgstr "设置 AWS FPGA 开发套件。"

#: ../../doc/docs/how_to/deploy/hls.rst:97
#: ../../doc/docs/how_to/deploy/hls.rst:170
msgid "Setup TVM with OpenCL enabled."
msgstr "设置启用 OpenCL 的 TVM。"

#: ../../doc/docs/how_to/deploy/hls.rst:100
msgid "Emulation"
msgstr "仿真"

#: ../../doc/docs/how_to/deploy/hls.rst:102
msgid "Create emconfig.json for emulation."
msgstr "创建 emconfig.json 以进行仿真。"

#: ../../doc/docs/how_to/deploy/hls.rst:108
msgid ""
"Copy emconfig.json to the python binary directory.  It is because the "
"current Xilinx toolkit assumes that both host binary and the "
"emconfig.json file are in the same path."
msgstr ""
"将 emconfig.json 复制到 python 二进制目录。这是因为当前的 Xilinx 工具包假定主机二进制文件和 emconfig.json 文件位于同一路径。"

#: ../../doc/docs/how_to/deploy/hls.rst:114
msgid "Run software emulation"
msgstr "运行软件仿真"

#: ../../doc/docs/how_to/deploy/hls.rst:124
msgid "Run hardware emulation"
msgstr "运行硬件仿真"

#: ../../doc/docs/how_to/deploy/hls.rst:135
msgid "Synthesis"
msgstr "合成"

#: ../../doc/docs/how_to/deploy/hls.rst:137
msgid "Run synthesis with the following script."
msgstr "使用以下脚本运行合成。"

#: ../../doc/docs/how_to/deploy/hls.rst:146
msgid "Create AWS FPGA image and upload it to AWS S3."
msgstr "创建 AWS FPGA 镜像并将其上传到 AWS S3。"

#: ../../doc/docs/how_to/deploy/hls.rst:155
msgid ""
"This also generates an awsxclbin file, which is necessary to use the AWS "
"FPGA image on F1 instances."
msgstr ""
"这还会生成 awsxclbin 文件，这是在 F1 实例上使用 AWS FPGA 镜像所必需的。"

#: ../../doc/docs/how_to/deploy/hls.rst:158
#: ../../doc/docs/how_to/deploy/hls.rst:178
msgid "Run"
msgstr "运行"

#: ../../doc/docs/how_to/deploy/hls.rst:160
msgid "Launch Amazon EC2 F1 instance."
msgstr "启动 Amazon EC2 F1 实例。"

#: ../../doc/docs/how_to/deploy/hls.rst:161
msgid "Copy ``myadd.so``, ``myadd.awsxclbin``, and ``run.py`` to the F1 instance."
msgstr "将 ``myadd.so``、``myadd.awsxclbin`` 和 ``run.py`` 复制到 F1 实例。"

#: ../../doc/docs/how_to/deploy/hls.rst:171
msgid "Become root and setup environment variables."
msgstr "成为 root 并设置环境变量。"

