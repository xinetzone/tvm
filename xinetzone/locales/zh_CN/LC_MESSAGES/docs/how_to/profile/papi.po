# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-09 21:52+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../doc/docs/how_to/profile/papi.rst:20
msgid "Getting Started With PAPI"
msgstr "PAPI 入门"

#: ../../doc/docs/how_to/profile/papi.rst:22
msgid ""
"The Performance Application Programming Interface (PAPI) is a library "
"that provides performance counters on a variety of platforms. Performance"
" counters provide accurate low-level information about processors "
"behavior during a given execution run. This information can contain "
"simple metrics like total cycle count, cache misses, and instructions "
"executed as well as more high level information like total FLOPS and warp"
" occupancy. PAPI makes these metrics available while profiling."
msgstr ""
"性能应用程序编程接口（PAPI）是一个库，它在多种平台上提供性能计数器。性能计数器提供了在给定执行过程中处理器行为的准确低级信息。"
"这些信息可以包含简单的指标，如总周期数、缓存未命中和执行的指令，以及更高级别的信息，如总浮点运算次数（FLOPS）和线程束占用率。PAPI 在性能分析时使这些指标可用。"

#: ../../doc/docs/how_to/profile/papi.rst:31
msgid "Installing PAPI"
msgstr "安装 PAPI"

#: ../../doc/docs/how_to/profile/papi.rst:33
msgid ""
"PAPI can either be installed using your package manager (``apt-get "
"install libpapi-dev`` on Ubuntu), or from source here: https://github.com"
"/icl-utk-edu/papi."
msgstr ""
"PAPI 可以通过您的包管理器安装（在 Ubuntu 上使用 ``apt-get install libpapi-dev``），或者从源代码安装，源代码位于：https://github.com/icl-utk-edu/papi。"

#: ../../doc/docs/how_to/profile/papi.rst:37
msgid ""
"Pulling the latest version of PAPI from source has caused build issues "
"before. Therefore, it is recommended to checkout tagged version "
"``papi-6-0-0-1-t``."
msgstr ""
"从源代码拉取最新版本的 PAPI 曾经引发过构建问题。因此，建议检出标签版本 ``papi-6-0-0-1-t``。"

#: ../../doc/docs/how_to/profile/papi.rst:40
msgid "Building TVM With PAPI"
msgstr "构建 带有 PAPI 的 TVM"

#: ../../doc/docs/how_to/profile/papi.rst:42
msgid ""
"To include PAPI in your build of TVM, set the following line in you "
"``config.cmake``:"
msgstr ""
"要在您的 TVM 构建中包含 PAPI，请在您的 ``config.cmake`` 文件中设置以下行："

#: ../../doc/docs/how_to/profile/papi.rst:48
msgid ""
"If PAPI is installed in a non-standard place, you can specify where it is"
" like so:"
msgstr ""
"如果 PAPI 安装在非标准的位置，您可以像这样指定其路径："

#: ../../doc/docs/how_to/profile/papi.rst:56
msgid "Using PAPI While Profiling"
msgstr "在性能分析时使用 PAPI"

#: ../../doc/docs/how_to/profile/papi.rst:58
msgid ""
"If TVM has been built with PAPI (see above), then you can pass a "
":py:class:`tvm.runtime.profiling.PAPIMetricCollector` to "
":py:meth:`tvm.runtime.GraphModule.profile` to collect performance "
"metrics. Here is an example:"
msgstr ""
"如果 TVM 已使用 PAPI 构建（见上文），那么您可以向 :py:meth:`tvm.runtime.GraphModule.profile` "
"传递 :py:class:`tvm.runtime.profiling.PAPIMetricCollector` 来收集性能指标。以下是示例："

#: ../../doc/docs/how_to/profile/papi.rst:98
msgid "You can also change which metrics are collected:"
msgstr "您还可以更改收集的指标："

#: ../../doc/docs/how_to/profile/papi.rst:120
msgid ""
"You can find a list of available metrics by running the ``papi_avail`` "
"and ``papi_native_avail`` commands."
msgstr ""
"您可以通过运行 ``papi_avail`` 和 ``papi_native_avail`` 命令来查看可用指标的列表。"
