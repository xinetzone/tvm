# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-09 21:52+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../doc/docs/reference/langref/hybrid_script.rst:21
msgid "Hybrid Frontend Language Reference"
msgstr "Hybrid 前端语言参考"

#: ../../doc/docs/reference/langref/hybrid_script.rst:24
msgid "Overview"
msgstr "概述"

#: ../../doc/docs/reference/langref/hybrid_script.rst:26
msgid ""
"This hybrid frontend allows users to write preliminary versions of some "
"idioms that yet have been supported by TVM officially."
msgstr ""
"这个 hybrid 前端允许用户编写一些 TVM 尚未正式支持的惯用语的初步版本。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:30
msgid "Features"
msgstr "特性"

#: ../../doc/docs/reference/langref/hybrid_script.rst:33
msgid "Software Emulation"
msgstr "软件仿真"

#: ../../doc/docs/reference/langref/hybrid_script.rst:35
msgid ""
"Both software emulation and compilation are supported. To define a "
"function, you need to use ``tvm.te.hybrid.script`` decorator to indicate "
"this is a hybrid function:"
msgstr ""
"软件仿真和编译均得到支持。要定义函数，您需要使用 ``tvm.te.hybrid.script`` 装饰器来表明其为 hybrid 函数："

#: ../../doc/docs/reference/langref/hybrid_script.rst:52
msgid ""
"This decorator will import `Keywords`_ required spontaneously when "
"software emulation. After software emulation is done, the imported "
"keywords will be cleaned up. Users do not need worry about keyword "
"conflict and pollution."
msgstr ""
"此装饰器在软件仿真时会自动导入所需的 `Keywords`_。软件仿真完成后，导入的关键词将被清理。用户无需担心关键词冲突和污染问题。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:56
msgid ""
"Every element passed for software emulation in the argument list is "
"either a python variable or ``numpy`` numeric type."
msgstr ""
"在参数列表中为软件仿真传递的每个元素要么是 Python 变量，要么是 ``numpy`` 数值类型。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:60
msgid "Backend Compilation"
msgstr "后端编译"

#: ../../doc/docs/reference/langref/hybrid_script.rst:62
msgid ""
"This function is not encouraged to use, users are encouraged to use the "
"second interface. The current parse interface looks like:"
msgstr ""
"不建议使用此函数，鼓励用户使用第二种接口。当前的解析接口如下："

#: ../../doc/docs/reference/langref/hybrid_script.rst:72
msgid ""
"If we pass these tvm data structures, like ``Tensor``, ``Var``, "
"``Expr.*Imm``, or ``tvm.container.Array``, to this function, it returns a"
" op node:"
msgstr ""
"如果传递这些 TVM 数据结构，如 ``Tensor``、``Var``、``Expr.*Imm`` 或 ``tvm.container.Array``，给这个函数，它将返回 op 节点："

#: ../../doc/docs/reference/langref/hybrid_script.rst:81
msgid ""
"You can use any methods that can be applied on a TVM ``OpNode``, like "
"create_schedule, although so far, the functionality of schedule is as "
"limited as ``ExternOpNode``. At least, it can be built to LLVM module."
msgstr ""
"您可以应用任何可用于 TVM ``OpNode`` 的方法，例如创建调度（create_schedule），尽管到目前为止，"
"调度的功能与 ``ExternOpNode`` 一样有限。至少，它可以被构建为 LLVM 模块。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:86
msgid "Tuning"
msgstr "调优"

#: ../../doc/docs/reference/langref/hybrid_script.rst:88
msgid ""
"Follow up the example above, you can use some tvm like interfaces to tune"
" the code:"
msgstr ""
"继续上面的例子，您可以使用一些类似 TVM 的接口来调优代码："

#: ../../doc/docs/reference/langref/hybrid_script.rst:97
msgid ""
"For now, you can use loop annotations (``unroll``, ``parallel``, "
"``vectorize``, and ``bind``), loop manipulation (``split`` and ``fuse``),"
" and ``reorder``."
msgstr ""
"目前，您可以使用循环注解（``unroll``、``parallel``、``vectorize`` 和 ``bind``）、循环操作（``split`` 和 ``fuse``）以及 ``reorder``。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:102
msgid ""
"This is a preliminary function, so users should be in charge of the "
"correctness of the functionality after tuning. Specifically, users should"
" be careful when fusing and reorderding imperfect loops."
msgstr ""
"这是初步功能，因此用户应负责调优后功能的正确性。具体来说，用户在融合和重新排序不完美循环时应格外小心。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:107
msgid "Loops"
msgstr "循环"

#: ../../doc/docs/reference/langref/hybrid_script.rst:109
msgid ""
"In HalideIR, loops have in total 4 types: ``serial``, ``unrolled``, "
"``parallel``, and ``vectorized``."
msgstr ""
"在 HalideIR 中，循环总共有 4 种类型：``serial``、``unrolled``、``parallel`` 和 ``vectorized``。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:111
msgid ""
"Here we use ``range`` aka ``serial``, ``unroll``, ``parallel``, and "
"``vectorize``, these **4** keywords to annotate the corresponding types "
"of for loops. The usage is roughly the same as Python standard ``range``."
msgstr ""
"这里使用 ``range`` 即 ``serial``、``unroll``、``parallel`` 和 ``vectorize``，这 **4** 个关键字来注释相应类型的 for 循环。用法与 Python 标准 ``range`` 大致相同。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:115
msgid ""
"Besides all the loop types supported in Halide, ``const_range`` is "
"supported for some specific conditions. Sometimes, "
"``tvm.container.Array`` is desired to pass as an argument, but in TVM-"
"HalideIR, there is no such support that converts ``tvm.container.Array`` "
"to an ``Expr``. Thus, a limited feature is supported. Users can access "
"containers by either constants or constants loops annotated."
msgstr ""
"除了 Halide 中支持的所有循环类型外，``const_range`` 支持某些特定条件。"
"有时，``tvm.container.Array`` 需要作为参数传递，但在 TVM-HalideIR 中，没有将 ``tvm.container.Array`` 转换为 ``Expr`` 的支持。"
"因此，支持有限的功能。用户可以通过常量或注释的常量循环访问容器。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:131
msgid "Variables"
msgstr "变量"

#: ../../doc/docs/reference/langref/hybrid_script.rst:133
msgid ""
"All the mutable variables will be lowered to an array with size 1. It "
"regards the first store of a variable as its declaration."
msgstr ""
"所有可变变量将被降级为大小为 1 的数组。它将变量的第一次存储视为其声明。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:138
msgid ""
"Unlike conventional Python, in hybrid script, the declared variable can "
"only be used in the scope level it is declared."
msgstr ""
"与传统的 Python 不同，在 hybrid 脚本中，声明的变量只能在其声明的范围级别中使用。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:144
msgid ""
"Currently, you can ONLY use basic-typed variables, i.e. the type of the "
"variable should be either ``float32``, or ``int32``."
msgstr ""
"目前，您只能使用基本类型的变量，即变量的类型应为 ``float32`` 或 ``int32``。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:158
msgid "Attributes"
msgstr "属性"

#: ../../doc/docs/reference/langref/hybrid_script.rst:160
msgid ""
"So far, ONLY tensors' ``shape`` and ``dtype`` attribute are supported! "
"The ``shape`` attribute is essentially a tuple, so you MUST access it as "
"an array. Currently, only constant-indexed access is supported."
msgstr ""
"到目前为止，仅支持张量的 ``shape`` 和 ``dtype`` 属性！``shape`` 属性本质上是一个元组，因此您必须将其作为数组访问。目前，仅支持常量索引访问。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:173
msgid "Conditional Statement and Expression"
msgstr "条件语句和表达式"

#: ../../doc/docs/reference/langref/hybrid_script.rst:184
msgid "However, NO ``True`` and ``False`` keyword supported yet."
msgstr "然而，目前不支持 ``True`` 和 ``False`` 关键字。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:188
msgid "Math Intrinsics"
msgstr "数学内置函数"

#: ../../doc/docs/reference/langref/hybrid_script.rst:190
msgid ""
"So far, these math intrinsics, ``log``, ``exp``, ``sigmoid``, ``tanh``, "
"``power``, and ``popcount``, are supported. No import is required, just "
"as it is mentioned in `Software Emulation`_, just use it!"
msgstr ""
"到目前为止，支持这些数学内置函数：``log``、``exp``、``sigmoid``、``tanh``、``power`` 和 ``popcount``。不需要导入，正如 `Software Emulation`_ 中提到的，直接使用即可！"

#: ../../doc/docs/reference/langref/hybrid_script.rst:195
msgid "Array Allocation"
msgstr "数组分配"

#: ../../doc/docs/reference/langref/hybrid_script.rst:197
msgid "**Under construction, this function will be supported later!**"
msgstr "**正在建设中，此功能将在稍后支持！**"

#: ../../doc/docs/reference/langref/hybrid_script.rst:199
msgid ""
"Use a function call ``allocation(shape, type, share/local)`` to declare "
"an array buffer. The basic usage is roughly the same as a normal "
"``numpy.array``, and you should access high-dim array in ``a[i, j, k]`` "
"fashion instead of ``a[i][j][k]``, even for ``tvm.container.Array`` for "
"compilation."
msgstr ""
"使用函数调用 ``allocation(shape, type, share/local)`` 来声明数组缓冲区。"
"基本用法与普通的 ``numpy.array`` 大致相同，您应该以 ``a[i, j, k]`` 的方式访问高维数组，而不是 ``a[i][j][k]``，即使对于 ``tvm.container.Array`` 也是如此，以便进行编译。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:206
msgid "Thread Bind"
msgstr "线程绑定"

#: ../../doc/docs/reference/langref/hybrid_script.rst:209
msgid "You can also do loop-thread bind by writing code like this:"
msgstr "您还可以通过编写如下代码来进行循环线程绑定："

#: ../../doc/docs/reference/langref/hybrid_script.rst:218
msgid "Assert Statement"
msgstr "断言语句"

#: ../../doc/docs/reference/langref/hybrid_script.rst:220
msgid ""
"Assert statement is supported, you can simply use it as it is in standard"
" Python."
msgstr ""
"支持断言语句，您可以像在标准 Python 中一样使用它。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:228
msgid ""
"``Assert`` is NOT a function call. Users are encouraged to use assert in "
"the way presented above --- condition followed by message. It fits both "
"Python AST and HalideIR."
msgstr ""
"``Assert`` 不是函数调用。鼓励用户以上述方式使用 assert --- 条件后跟消息。它既适合 Python AST 也适合 HalideIR。"

#: ../../doc/docs/reference/langref/hybrid_script.rst:232
msgid "Keywords"
msgstr "关键字"

#: ../../doc/docs/reference/langref/hybrid_script.rst:233
msgid ""
"For keywords: ``serial``, ``range``, ``unroll``, ``parallel``, "
"``vectorize``, ``bind``, ``const_range``"
msgstr ""
"对于关键字：``serial``、``range``、``unroll``、``parallel``、``vectorize``、``bind``、``const_range``""

#: ../../doc/docs/reference/langref/hybrid_script.rst:234
msgid ""
"Math keywords: ``log``, ``exp``, ``sqrt``, ``rsqrt``, ``sigmoid``, "
"``tanh``, ``power``, ``popcount``, ``round``, ``ceil_div``"
msgstr ""
"数学关键字：``log``、``exp``、``sqrt``、``rsqrt``、``sigmoid``、``tanh``、``power``、``popcount``、``round``、``ceil_div``""

#: ../../doc/docs/reference/langref/hybrid_script.rst:235
msgid "Allocate keywords: ``allocate``, ``output_tensor``"
msgstr "分配关键字：``allocate``、``output_tensor``""

#: ../../doc/docs/reference/langref/hybrid_script.rst:236
msgid ""
"Data type keywords: ``uint8``, ``uint16``, ``uint32``, ``uint64``, "
"``int8``, ``int16``, ``int32``, ``int64``, ``float16``, ``float32``, "
"``float64``"
msgstr ""
"数据类型关键字：``uint8``、``uint16``、``uint32``、``uint64``、``int8``、``int16``、``int32``、``int64``、``float16``、``float32``、``float64``""

#: ../../doc/docs/reference/langref/hybrid_script.rst:237
msgid "Others: ``max_num_threads``"
msgstr "其他： ``max_num_threads``"

