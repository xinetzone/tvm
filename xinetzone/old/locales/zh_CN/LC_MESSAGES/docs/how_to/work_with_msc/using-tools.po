# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-04-07 10:53+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../doc/docs/how_to/work_with_msc/using-tools.ipynb:10002
msgid "包装 PyTorch 模型进行量化"
msgstr ""

#: ../../doc/docs/how_to/work_with_msc/using-tools.ipynb:10004
msgid ""
"这个例子展示了 [MSC](https://discuss.tvm.apache.org/t/rfc-unity-msc-"
"introduction-to-multi-system-compiler/15251/5) 如何运行 PTQ（Post-Training "
"Quantization，训练后量化）、QAT（Quantization Aware Training，量化感知训练）以及带有蒸馏的 PTQ..."
msgstr ""

#: ../../doc/docs/how_to/work_with_msc/using-tools.ipynb:10006
msgid ""
"这个例子使用了 "
"[resnet50](https://github.com/huyvnphan/PyTorch_CIFAR10/tree/master)，请在运行示例之前下载"
" `pt` 文件。"
msgstr ""

