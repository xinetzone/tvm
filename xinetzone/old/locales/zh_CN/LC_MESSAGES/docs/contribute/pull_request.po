# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the TVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TVM \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-09 00:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../xin/docs/contribute/pull_request.rst:19
msgid "Submit a Pull Request"
msgstr "提交 Pull Request"

#: ../../xin/docs/contribute/pull_request.rst:26
msgid "Guidelines"
msgstr "指南"

#: ../../xin/docs/contribute/pull_request.rst:28
msgid ""
"We recommend authors send well scoped PRs that are easy to review and "
"revert in case there is a problem. As such, authors should avoid merging "
"multiple unrelated changes into a single PR"
msgstr "建议作者发送范围明确的 PR，以便在出现问题时进行审查和回复。因此，作者应该避免将多个不相关的变化合并成单个 PR。"

#: ../../xin/docs/contribute/pull_request.rst:29
msgid ""
"Before you submit a PR, please rebase your code on the most recent "
"version of ``main``, you can do it by running"
msgstr "在你提交 PR 之前，请根据 ``main`` 的最新版本重新编写代码，你可以通过运行"

#: ../../xin/docs/contribute/pull_request.rst:38
msgid "Make sure code passes lint checks"
msgstr "确保代码通过 lint 检查"

#: ../../xin/docs/contribute/pull_request.rst:54
msgid ""
"If the clang-format lint check fails, run git-clang-format as follows to "
"automatically reformat your code:"
msgstr "如果 clang-format lint 检查失败，运行如下 git-clang-format 来自动重新格式化你的代码："

#: ../../xin/docs/contribute/pull_request.rst:62
msgid "Add test-cases to cover the new features or bugfix the patch introduces."
msgstr "添加测试用例来覆盖新特性或修复补丁引入的 bug。"

#: ../../xin/docs/contribute/pull_request.rst:63
msgid "Document the code you wrote, see more at :ref:`doc_guide`"
msgstr "记录你写的代码，参见 :ref:`doc_guide`"

#: ../../xin/docs/contribute/pull_request.rst:64
msgid ""
"`Create a pull request <https://docs.github.com/en/pull-requests"
"/collaborating-with-pull-requests/proposing-changes-to-your-work-with-"
"pull-requests/creating-a-pull-request>`_ and fix the problems reported by"
" CI checks."
msgstr ""
"`创建 pull request <https://docs.github.com/en/pull-requests/collaborating-"
"with-pull-requests/proposing-changes-to-your-work-with-pull-"
"requests/creating-a-pull-request>`_ 并修复 CI 检查报告的问题。"

#: ../../xin/docs/contribute/pull_request.rst:65
#, fuzzy
msgid ""
"Request code reviews from other contributors and improve your patch "
"according to their reviews by ``@``-ing them in your pull request. Tags "
"in PR titles will automatically tag subscribed users, so make sure to put"
" relevant topics in your PR titles (e.g. ``[microTVM] Add a cool change``"
" and not ``a cool change for microTVM``). Please see the Commit Message "
"Guideline below on the guidelines about the tags in a PR/commit title and"
" how to write good PR/commit messages."
msgstr ""
"向其他贡献者请求代码评审，并根据他们的评审，通过在你的 pull request中 ``@`` 他们来改进你的补丁。PR "
"标题中的标签会自动标记订阅用户，所以请确保在 PR 标题中添加相关主题（例如：``[microTVM] a cool change``，而不是 "
"``a cool change for microTVM``）。"

#: ../../xin/docs/contribute/pull_request.rst:72
msgid ""
"To get your code reviewed quickly, we encourage you to help review "
"others' code so they can do the favor in return."
msgstr "为了让您的代码快速被评审，鼓励您帮助评审其他人的代码，这样他们就可以反过来帮助您。"

#: ../../xin/docs/contribute/pull_request.rst:73
msgid ""
"Code review is a shepherding process that helps to improve contributor's "
"code quality. We should treat it proactively, to improve the code as much"
" as possible before the review. We highly value patches that can get in "
"without extensive reviews."
msgstr "代码评审是帮助改进贡献者代码质量的指导过程。应该积极地对待它，在评审之前尽可能地改进代码。我们非常重视那些没有大量评论的补丁。"

#: ../../xin/docs/contribute/pull_request.rst:76
msgid "The detailed guidelines and summarizes useful lessons."
msgstr "详细的指导方针并总结了有益的经验教训。"

#: ../../xin/docs/contribute/pull_request.rst:78
msgid "The PR can be merged after the reviewers approve the pull request."
msgstr "审核人员批准拉请求后，可以合并 PR。"

#: ../../xin/docs/contribute/pull_request.rst:81
msgid "Commit Message Guideline"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:83
msgid ""
"Apache TVM uses the Github (GH) platform for patch submission and code "
"review via Pull Requests (PRs). The final commit (title and body) that is"
" merged into the Apache TVM main tree is composed of the PR's title and "
"body and must be kept updated and reflecting the new changes in the code "
"as per the reviews and discussions."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:89
msgid ""
"Although these guidelines apply essentially to the PRs’ title and body "
"messages, because GH auto-generates the PR’s title and body from the "
"commits on a given branch, it’s recommended to follow these guidelines "
"right from the beginning, when preparing commits in general to be "
"submitted to the Apache TVM project. This will ease the creation of a new"
" PR, avoiding rework, and also will help the review."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:96
msgid ""
"The rules below will help to achieve uniformity that has several "
"benefits, both for review and for the code base maintenance as a whole, "
"helping you to write commit messages with a good quality suitable for the"
" Apache TVM project, allowing fast log searches, bisecting, and so on."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:101
msgid "*PR/commit title*:"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:103
msgid "Guarantee a title exists (enforced);"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:104
msgid "Don’t use Github usernames in the title, like @username (enforced);"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:105
msgid ""
"A tag must be present as a hint about what component(s) of the code the "
"PRs / commits “touch” (enforced). For example [BugFix], [CI], [microTVM],"
" and [TVMC]. Tags go between square brackets and appear first in the "
"title. If more than one tag exist, multiple brackets should be used, like"
" [BugFix][CI]. The case recommended for tags, in geral, is the upper "
"camel case. For example, prefer the forms [Fix], [BugFix], and [Docker] "
"instead of [fix], [bug_fix], and [docker]. Acronyms should be kept as "
"such so, for example, use [CI] and [TVMC] instead of [ci] and [tvmc]. "
"Tags help reviewers to identify the PRs they can/want to review and also "
"help the release folks when generating the release notes;"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:115
msgid ""
"Use an imperative mood. Avoid titles like “Added operator X” and “Updated"
" image Y in the CI”, instead use the forms “Add feature X” and “Update "
"image Y in the CI” instead;"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:118
msgid ""
"Observe proper use of caps at the beginning (uppercase for the first "
"letter) and for acronyms, like, for instance, TVM, FVP, OpenCL. Hence "
"instead of “fix tvm use of opencl library”, write it as “Fix TVM use of "
"OpenCL library”;"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:121
msgid "Do not put a period at the end of the title."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:123
msgid "*PR/commit body*:"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:125
msgid "Guarantee a body exists (enforced);"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:126
msgid "Don’t use Github usernames in body text, like @username (enforced);"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:127
msgid ""
"Avoid “bullet” commit message bodies: “bullet” commit message bodies are "
"not bad per se, but “bullet” commit messages without any description or "
"explanation is likely as bad as commits without any description, "
"rationale, or explanation in the body."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:132
msgid ""
"For minor deviations from these guidelines, the community will normally "
"favor reminding the contributor of this policy over reverting or blocking"
" a commmit / PR."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:136
msgid ""
"Commits and PRs without a title and/or a body are not considered minor "
"deviations from these guidelines and hence must be avoided."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:139
msgid ""
"Most importantly, the contents of the commit message, especially the "
"body, should be written to convey the intention of the change, so it "
"should avoid being vague. For example, commits with a title like “Fix”, "
"“Cleanup”, and “Fix flaky test” and without any body text should be "
"avoided. Also, for the review, it will leave the reviewer wondering about"
" what exactly was fixed or changed and why the change is necessary, "
"slowing the review."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:146
msgid "Below is an example that can be used as a model:"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:170
msgid ""
"After a new PR is created and the review starts it’s common that "
"reviewers will request changes. Usually the author will address the "
"reviewers’ comments and push additional commits on top of the initial "
"ones. For these additional commits there is no recommendation regarding "
"the commit messages. However if the additional commits render the PR "
"title and/or body outdated then it's the author's responsibility to keep "
"the PR title and body in sync with new changes in the code and updated "
"the PR title and body accordingly (remember that the PR title and body "
"will be used to compose the final commit message that will land in the "
"main tree)."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:180
msgid ""
"Committers will seek to fix any issues with the commit message prior to "
"committing but they retain the right to inform the author of the rules "
"and encourage them to follow them in future. Also, they retain the right "
"to ask to the author to update the PR title and/or body when they are not"
" correctly updated or fixed."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:187
msgid "CI Environment"
msgstr "CI 环境"

#: ../../xin/docs/contribute/pull_request.rst:188
msgid ""
"We use Docker images to create stable CI environments that can be "
"deployed to multiple machines. Follow the steps in `this issue template "
"<https://github.com/apache/tvm/issues/new?assignees=&labels=&template=ci-"
"image.md&title=%5BCI+Image%5D+>`_ to update a CI Docker image."
msgstr ""
"使用 Docker 映像创建稳定的 CI 环境，可以部署到多台机器上。按照 `此 issue 模板 "
"<https://github.com/apache/tvm/issues/new?assignees=&labels=&template=ci-"
"image.md&title=%5BCI+Image%5D+>`_ 中的步骤来更新 CI Docker 映像。"

#: ../../xin/docs/contribute/pull_request.rst:195
msgid "Testing"
msgstr "测试"

#: ../../xin/docs/contribute/pull_request.rst:196
msgid ""
"Even though we have hooks to run unit tests automatically for each pull "
"request, it's always recommended to run unit tests locally beforehand to "
"reduce reviewers' burden and speedup review process."
msgstr "尽管有钩子为每个拉请求自动运行单元测试，但总是建议提前在本地运行单元测试，以减少审阅人员的负担，加快审阅过程。"

#: ../../xin/docs/contribute/pull_request.rst:200
msgid "Docker (recommended)"
msgstr "Docker（推荐）"

#: ../../xin/docs/contribute/pull_request.rst:201
msgid ""
"``tests/scripts/ci.py`` replicates the CI environment locally and "
"provides a user-friendly interface. The same Docker images and scripts "
"used in CI are used directly to run tests. It also deposits builds in "
"different folders so you can maintain multiple test environments without "
"rebuilding from scratch each time (e.g. you can test a change in CPU and "
"i386 while retaining incremental rebuilds)."
msgstr ""
"``tests/scripts/ci.py`` 在本地复制 CI 环境并提供用户友好的界面。在 CI 中使用的 Docker "
"映像和脚本直接用于运行测试。它还将构建版本存储在不同的文件夹中，这样你就可以维护多个测试环境，而不必每次都从头开始重新构建（例如，你可以测试 "
"CPU 和 i386 中的变化，同时保持增量重新构建）。"

#: ../../xin/docs/contribute/pull_request.rst:227
msgid ""
"We regularly update our docker images and, over time, stale images may "
"unnecessarily consume disk space. You can remove stale images that aren't"
" used in the presently checked-out branch plus any other worktrees using "
"the following command:"
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:235
msgid "Consult the ``--help`` for more options."
msgstr ""

#: ../../xin/docs/contribute/pull_request.rst:238
msgid "C++ (local)"
msgstr "C++（本地）"

#: ../../xin/docs/contribute/pull_request.rst:240
msgid ""
"Running the C++ tests requires installation of gtest, following the "
"instructions in :ref:`install-from-source-cpp-tests`"
msgstr "运行 C++ 测试需要安装 gtest，请参见 :ref:`install-from-source-cpp-tests`"

#: ../../xin/docs/contribute/pull_request.rst:252
msgid "Python (local)"
msgstr "Python（本地）"

#: ../../xin/docs/contribute/pull_request.rst:253
msgid "Necessary dependencies:"
msgstr "必要的依赖关系："

#: ../../xin/docs/contribute/pull_request.rst:259
msgid "If you want to run all tests:"
msgstr "如果要运行所有测试："

#: ../../xin/docs/contribute/pull_request.rst:268
msgid "If you want to run a single test:"
msgstr "如果要运行单个测试："

