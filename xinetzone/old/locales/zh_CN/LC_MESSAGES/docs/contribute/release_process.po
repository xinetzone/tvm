# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the TVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TVM \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-17 09:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../notebook/docs/contribute/release_process.rst:21
msgid "Release Process"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:27
msgid ""
"The release manager role in TVM means you are responsible for a few "
"different things:"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:29
msgid "Preparing release notes"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:30
msgid "Preparing your setup"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:31
msgid "Preparing for release candidates"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:33
msgid "Cutting a release branch"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:34
msgid "Informing the community of timing"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:35
msgid "Making code changes in that branch with necessary version updates"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:37
msgid "Running the voting process for a release"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:39
msgid "Creating release candidates"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:40
msgid "Calling votes and triaging issues"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:42
msgid "Finalizing and posting a release:"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:44
msgid "Updating the TVM website"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:45
msgid "Finalizing release notes"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:46
msgid "Announcing the release"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:50
msgid "Prepare the Release Notes"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:52
#, python-format
msgid ""
"Release note contains new features, improvement, bug fixes, known issues "
"and deprecation, etc. TVM provides `monthly dev report "
"<https://discuss.tvm.ai/search?q=TVM%20Monthly%20%23Announcement>`_ "
"collects developing progress each month. It could be helpful to who "
"writes the release notes."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:54
msgid ""
"It is recommended to open a Github issue to collect feedbacks for the "
"release note draft before cutting the release branch. See the scripts in "
"``tests/scripts/release`` for some starting points."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:58
msgid "Prepare the Release Candidate"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:60
msgid ""
"There may be some code changes necessary to the release branch before the"
" release. Ensure all version numbers are up to date"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:64
msgid "Prepare the GPG Key"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:66
msgid "You can skip this section if you have already uploaded your key."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:68
msgid ""
"After generating the gpg key, you need to upload your key to a public key"
" server. Please refer to https://www.apache.org/dev/openpgp.html"
"#generate-key for details."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:70
msgid ""
"If you want to do the release on another machine, you can transfer your "
"gpg key to that machine via the ``gpg --export`` and ``gpg --import`` "
"commands."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:72
msgid ""
"The last step is to update the KEYS file with your code signing key "
"https://www.apache.org/dev/openpgp.html#export-public-key. Check in the "
"changes to the TVM main branch, as well as ASF SVN,"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:87
msgid "Cut a Release Candidate"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:89
msgid "To cut a release candidate branch for v0.6 release:"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:91
msgid ""
"Need push two commits in one pull request: the first commit need update "
"version number from 0.6.dev0 to 0.6.0, second commit in same one pull "
"request updating version number from 0.6.0 to 0.7.dev0. For this title of"
" pull request, need specify: `[Dont Squash]`;"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:92
msgid ""
"After merged, cut a branch on first version number commit. Branches "
"should be named with the base release version without the patch. For "
"example, to cut a candidate for ``v0.6.0``, the branch should be ``v0.6``"
" and a tag named ``v0.6.0.rc0`` pushed to the HEAD of that branch once "
"cut."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:120
msgid ""
"Make sure the version numbers in the source code are correct (example: "
"https://github.com/apache/tvm/pull/14300). Run ``python3 version.py`` to "
"update the version. Version numbers should be updated immediately after a"
" release candidate branch is pushed."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:122
msgid ""
"Go to the GitHub repositories \"releases\" tab and click \"Draft a new "
"release\","
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:124
msgid ""
"Verify the release by checking the version numbers and ensuring that TVM "
"can build and run the unit tests."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:125
msgid ""
"Provide the release tag in the form of ``v1.0.0.rc0`` where 0 means it's "
"the first release candidate. The tag must match this pattern "
"``v[0-9]+\\.[0-9]+\\.[0-9]+\\.rc[0-9]`` exactly!"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:126
msgid ""
"Select the commit by clicking Target: branch > Recent commits > "
"$commit_hash"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:127
msgid "Copy and paste release note draft into the description box"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:128
msgid "Select \"This is a pre-release\""
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:129
msgid "Click \"Publish release\""
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:131
msgid ""
"Notice that one can still apply changes to the branch after the cut, "
"while the tag is fixed. If any change is required for this release, a new"
" tag has to be created."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:133
msgid "Remove previous release candidate (if applied),"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:139
msgid "Create source code artifacts,"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:155
msgid ""
"Use your GPG key to sign the created artifact. First make sure your GPG "
"is set to use the correct private key,"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:162
msgid "Create GPG signature as well as the hash of the file,"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:171
msgid "Update TVM Version on ``main``"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:173
msgid ""
"After cutting a release candidate, make sure to update the version "
"numbers throughout ``main``. For example if we are releasing ``v0.10.0`` "
"we want to bump the version numbers throughout the codebase from "
"``v0.10.dev0`` to ``v0.11.dev0``. An example of how to do this can be "
"found here: `https://github.com/apache/tvm/pull/12190 "
"<https://github.com/apache/tvm/pull/12190>`_. Tag the commit on ``main`` "
"immediately after the last one included in the release branch with the "
"dev tag (e.g. ``v0.11.dev0``) for the next release. This tag is necessary"
" so that the nightly packages built from ``main`` have the correct "
"version number."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:181
msgid "Upload the Release Candidate"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:183
msgid ""
"Edit the release page on Github and upload the artifacts created by the "
"previous steps."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:185
msgid "The release manager also needs to upload the artifacts to ASF SVN,"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:199
msgid "Cherry-Picking"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:200
msgid ""
"After a release branch has been cut but before the release has been voted"
" on, the release manager may cherry-pick commits from ``main``. Since "
"release branches are protected on GitHub, to merge this fixes into the "
"release branch (e.g. ``v0.11``), the release manager must file a PR with "
"the cherry-picked changes against the release branch. The PR should "
"roughly match the original one from ``main`` with extra details on why "
"the commit is being cherry-picked. The community then goes through a "
"normal review and merge process for these PRs. Note that these PRs "
"against the release branches must be `signed "
"<https://docs.github.com/en/authentication/managing-commit-signature-"
"verification/signing-commits>`_."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:204
msgid "Call a Vote on the Release Candidate"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:206
msgid ""
"The first voting takes place on the Apache TVM developers list "
"(dev@tvm.apache.org). To get more attention, one can create a GitHub "
"issue start with \"[VOTE]\" instead, it will be mirrored to dev@ "
"automatically. Look at past voting threads to see how this proceeds. The "
"email should follow this format."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:208
msgid "Provide the link to the draft of the release notes in the email"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:209
msgid "Provide the link to the release candidate artifacts"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:210
msgid "Make sure the email is in text format and the links are correct"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:212
msgid ""
"For the dev@ vote, there must be at least 3 binding +1 votes and more +1 "
"votes than -1 votes. Once the vote is done, you should also send out a "
"summary email with the totals, with a subject that looks something like "
"[VOTE][RESULT] ...."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:214
msgid ""
"In ASF, votes are open at least 72 hours (3 days). If you don't get "
"enough number of binding votes within that time, you cannot close the "
"voting deadline. You need to extend it."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:216
msgid ""
"If the vote fails, the community needs to modify the release accordingly:"
" create a new release candidate and re-run the voting process."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:220
msgid "Post the Release"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:222
msgid ""
"After the vote passes, to upload the binaries to Apache mirrors, you move"
" the binaries from dev directory (this should be where they are voted) to"
" release directory. This \"moving\" is the only way you can add stuff to "
"the actual release directory. (Note: only PMC can move to release "
"directory)"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:235
msgid ""
"Remember to create a new release TAG (v0.6.0 in this case) on Github and "
"remove the pre-release candidate TAG."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:243
msgid "Update the TVM Website"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:245
msgid ""
"The website repository is located at `https://github.com/apache/tvm-site "
"<https://github.com/apache/tvm-site>`_. Modify the download page to "
"include the release artifacts as well as the GPG signature and SHA hash. "
"Since TVM's docs are continually updated, upload a fixed version of the "
"release docs. If CI has deleted the docs from the release by the time you"
" go to update the website, you can restart the CI build for the release "
"branch on Jenkins. See the example code below for a starting point."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:270
msgid ""
"Afterwards, modify the `downloads page "
"<https://tvm.apache.org/download>`_ to support the latest release. An "
"example of how to do this is `here <https://github.com/apache/tvm-"
"site/pull/38>`_."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:273
msgid "Post the Announcement"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:275
msgid ""
"Send out an announcement email to announce@apache.org, and "
"dev@tvm.apache.org. The announcement should include the link to release "
"note and download page."
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:278
msgid "Patch Releases"
msgstr ""

#: ../../notebook/docs/contribute/release_process.rst:279
msgid ""
"Patch releases should be reserved for critical bug fixes. Patch releases "
"must go through the same process as normal releases, with the option at "
"the release manager's discretion of a shortened release candidate voting "
"window of 24 hours to ensure that fixes are delivered quickly. Each patch"
" release should bump the version numbers on the release base branch (e.g."
" ``v0.11``) and tags created for release candidates (e.g. "
"``v0.11.1.rc0``)."
msgstr ""

#~ msgid "Apache TVM Release Process"
#~ msgstr ""

#~ msgid ""
#~ "It is recommended to open a Github"
#~ " issue to collect feedbacks for the"
#~ " release note draft before cutting "
#~ "the release branch."
#~ msgstr ""

#~ msgid ""
#~ "If you want to do the release "
#~ "on another machine, you can transfer "
#~ "your gpg key to that machine via"
#~ " the :code:`gpg --export` and :code:`gpg"
#~ " --import` commands."
#~ msgstr ""

#~ msgid ""
#~ "(*Make sure the version numbers in "
#~ "the source code are correct.* Run "
#~ ":code:`python3 version.py` to update the "
#~ "version.)"
#~ msgstr ""

#~ msgid ""
#~ "Provide the release tag in the "
#~ "form of “v1.0.0.rc0” where 0 means "
#~ "it’s the first release candidate"
#~ msgstr ""

#~ msgid ""
#~ "Notice that one can still apply "
#~ "changes to the BRANCH after the "
#~ "cut, while the TAG is fixed. If"
#~ " any change is required for this "
#~ "release, a new TAG has to be "
#~ "created."
#~ msgstr ""

#~ msgid ""
#~ "The first voting takes place on "
#~ "the Apache TVM developers list "
#~ "(dev@tvm.apache.org). To get more attention,"
#~ " one can create a github issue "
#~ "start with \"[VOTE]\" instead, it will"
#~ " be mirrored to dev@ automatically. "
#~ "Look at past voting threads to see"
#~ " how this proceeds. The email should"
#~ " follow this format."
#~ msgstr ""

#~ msgid ""
#~ "In ASF, votes are open \"at "
#~ "least\" 72hrs (3 days). If you "
#~ "don't get enough number of binding "
#~ "votes within that time, you cannot "
#~ "close the voting deadline. You need "
#~ "to extend it."
#~ msgstr ""

#~ msgid ""
#~ "If the voting fails, the community "
#~ "needs to modified the release "
#~ "accordingly, create a new release "
#~ "candidate and re-run the voting "
#~ "process."
#~ msgstr ""

#~ msgid ""
#~ "The website repository is located at "
#~ "`https://github.com/apache/tvm-site "
#~ "<https://github.com/apache/tvm-site>`_. Modify the"
#~ " download page to include the release"
#~ " artifacts as well as the GPG "
#~ "signature and SHA hash."
#~ msgstr ""

#~ msgid ""
#~ "To cut a release candidate, one "
#~ "needs to first cut a branch using"
#~ " selected version string, e.g.,"
#~ msgstr ""

#~ msgid ""
#~ "(*Make sure the version numbers in "
#~ "the source code are correct.* Run "
#~ "``python3 version.py`` to update the "
#~ "version.)"
#~ msgstr ""

#~ msgid ""
#~ "To cut a release candidate, one "
#~ "needs to first cut a branch using"
#~ " selected version string. Branches should"
#~ " be named with the base release "
#~ "version without the patch. For example,"
#~ " to cut a candidate for ``v0.11.0``,"
#~ " the branch should be ``v0.11`` and"
#~ " a tag named ``v0.11.0.rc0`` pushed "
#~ "to the HEAD of that branch once"
#~ " cut."
#~ msgstr ""

