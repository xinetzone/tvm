# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-29 15:13+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../doc/docs/_staging/reference/api/python/runtime/profiling.rst:19
msgid "tvm.runtime.profiling"
msgstr ""

#: of tvm.runtime.profiling:1
msgid "Registration of profiling objects in python."
msgstr ""

#: of tvm.runtime.profiling.Count:1
msgid "A integer count of something"
msgstr ""

#: ../../doc/docs/_staging/reference/api/python/runtime/profiling.rst of
#: tvm.runtime.profiling.Count tvm.runtime.profiling.DeviceWrapper
#: tvm.runtime.profiling.Duration tvm.runtime.profiling.Percent
#: tvm.runtime.profiling.Ratio tvm.runtime.profiling.Report
msgid "参数"
msgstr ""

#: of tvm.runtime.profiling.DeviceWrapper:1
msgid "Wraps a tvm.runtime.Device"
msgstr ""

#: of tvm.runtime.profiling.Duration:1
msgid "A duration of something"
msgstr ""

#: of tvm.runtime.profiling.MetricCollector:1
msgid "Interface for user defined profiling metric collection."
msgstr ""

#: of tvm.runtime.profiling.Percent:1
msgid "A Percent of something"
msgstr ""

#: of tvm.runtime.profiling.Ratio:1
msgid "A Ratio of two things"
msgstr ""

#: of tvm.runtime.profiling.Report:1
msgid "A container for information gathered during a profiling run."
msgstr ""

#: of tvm.runtime.profiling.Report:4
msgid "Attributes"
msgstr ""

#: of tvm.runtime.profiling.Report:6 tvm.runtime.profiling.Report.__init__:6
msgid "calls"
msgstr ""

#: of tvm.runtime.profiling.Report:-1
msgid "Array[Dict[str, Object]]"
msgstr ""

#: of tvm.runtime.profiling.Report:6
msgid "Per-call profiling metrics (function name, runtime, device, ...)."
msgstr ""

#: of tvm.runtime.profiling.Report:10 tvm.runtime.profiling.Report.__init__:9
msgid "device_metrics"
msgstr ""

#: of tvm.runtime.profiling.Report:-1
msgid "Dict[Device, Dict[str, Object]]"
msgstr ""

#: of tvm.runtime.profiling.Report:9
msgid "Per-device metrics collected over the entire run."
msgstr ""

#: of tvm.runtime.profiling.Report.__init__:1
msgid ""
"Construct a profiling report from a list of metrics and per-device "
"metrics."
msgstr ""

#: of tvm.runtime.profiling.Report.__init__:4
#: tvm.runtime.profiling.Report.from_json:4
#: tvm.runtime.profiling.Report.table:4
#: tvm.runtime.profiling.profile_function:24
msgid "Parameters"
msgstr ""

#: of tvm.runtime.profiling.Report.__init__:-1
msgid "Sequence[Dict[str, Object]]"
msgstr ""

#: of tvm.runtime.profiling.Report.__init__:6
msgid "Per function call metrics."
msgstr ""

#: of tvm.runtime.profiling.Report.__init__:-1
msgid "Dict[str, Dict[str, Object]]"
msgstr ""

#: of tvm.runtime.profiling.Report.__init__:9
msgid "Per device metrics."
msgstr ""

#: of tvm.runtime.profiling.Report.__init__:12
msgid "configuration"
msgstr ""

#: of tvm.runtime.profiling.Report.__init__:-1
msgid "Dict[str, Object]"
msgstr ""

#: of tvm.runtime.profiling.Report.__init__:12
msgid ""
"Configuration of TVM for this profiling run. Includes number of threads, "
"executor."
msgstr ""

#: of tvm.runtime.profiling.Report.csv:1
msgid "Convert this profiling report into CSV format."
msgstr ""

#: of tvm.runtime.profiling.Report.csv:3
msgid "This only includes calls and not overall metrics."
msgstr ""

#: of tvm.runtime.profiling.Report.csv:6
#: tvm.runtime.profiling.Report.from_json:9
#: tvm.runtime.profiling.Report.json:51 tvm.runtime.profiling.Report.table:21
#: tvm.runtime.profiling.profile_function:40
msgid "Returns"
msgstr ""

#: of tvm.runtime.profiling.Report.csv:7
msgid "csv"
msgstr ""

#: of tvm.runtime.profiling.Report.csv:-1
#: tvm.runtime.profiling.Report.from_json:-1
#: tvm.runtime.profiling.Report.json:-1
msgid "str"
msgstr ""

#: of tvm.runtime.profiling.Report.csv:8
msgid "`calls` in CSV format."
msgstr ""

#: of tvm.runtime.profiling.Report.from_json:1
msgid "Deserialize a report from JSON."
msgstr ""

#: of tvm.runtime.profiling.Report.from_json:6
msgid "s"
msgstr ""

#: of tvm.runtime.profiling.Report.from_json:6
msgid "Report serialize via :py:meth:`json`."
msgstr ""

#: of tvm.runtime.profiling.Report.from_json:10
msgid "report"
msgstr ""

#: of tvm.runtime.profiling.Report.from_json:-1
msgid "Report"
msgstr ""

#: of tvm.runtime.profiling.Report.from_json:11
msgid "The deserialized report."
msgstr ""

#: of tvm.runtime.profiling.Report.json:1
msgid "Convert this profiling report into JSON format."
msgstr ""

#: of tvm.runtime.profiling.Report.json:3
msgid "Example output:"
msgstr ""

#: of tvm.runtime.profiling.Report.json:52
msgid "json"
msgstr ""

#: of tvm.runtime.profiling.Report.json:53
msgid "Formatted JSON"
msgstr ""

#: of tvm.runtime.profiling.Report.table:1
msgid "Generate a human-readable table"
msgstr ""

#: of tvm.runtime.profiling.Report.table:5
msgid "sort : bool"
msgstr ""

#: of tvm.runtime.profiling.Report.table:7
msgid ""
"If aggregate is true, whether to sort call frames by descending duration."
"  If aggregate is False, whether to sort frames by order of appearancei n"
" the program."
msgstr ""

#: of tvm.runtime.profiling.Report.table:11
msgid "aggregate : bool"
msgstr ""

#: of tvm.runtime.profiling.Report.table:13
msgid "Whether to join multiple calls to the same op into a single line."
msgstr ""

#: of tvm.runtime.profiling.Report.table:16
msgid "col_sums : bool"
msgstr ""

#: of tvm.runtime.profiling.Report.table:18
msgid "Whether to include the sum of each column."
msgstr ""

#: of tvm.runtime.profiling.Report.table:22
msgid "table : str"
msgstr ""

#: of tvm.runtime.profiling.Report.table:24
msgid "A human-readable table"
msgstr ""

#: of tvm.runtime.profiling.profile_function:1
msgid ""
"Collect performance information of a function execution. Usually used "
"with a compiled PrimFunc."
msgstr ""

#: of tvm.runtime.profiling.profile_function:4
msgid ""
"This information can include performance counters like cache hits and "
"FLOPs that are useful in debugging performance issues of individual "
"PrimFuncs. Different metrics can be collected depending on which "
"MetricCollector is used."
msgstr ""

#: of tvm.runtime.profiling.profile_function:10
msgid "Example"
msgstr ""

#: of tvm.runtime.profiling.profile_function:25
msgid "mod: Module"
msgstr ""

#: of tvm.runtime.profiling.profile_function:26
msgid "Module containing the function to profile."
msgstr ""

#: of tvm.runtime.profiling.profile_function:28
msgid "dev: Device"
msgstr ""

#: of tvm.runtime.profiling.profile_function:28
msgid "Device to run the function on."
msgstr ""

#: of tvm.runtime.profiling.profile_function:30
msgid "collectors: List[MetricCollector]"
msgstr ""

#: of tvm.runtime.profiling.profile_function:31
msgid ":py:class:`MetricCollector` which will collect performance information."
msgstr ""

#: of tvm.runtime.profiling.profile_function:32
msgid "func_name: Optional[str]"
msgstr ""

#: of tvm.runtime.profiling.profile_function:33
msgid ""
"Name of the function in `mod` to profile. Defaults to the `entry_name` of"
" `mod`."
msgstr ""

#: of tvm.runtime.profiling.profile_function:37
msgid "warmup_iters: int"
msgstr ""

#: of tvm.runtime.profiling.profile_function:35
msgid ""
"Number of iterations to run the function before collecting performance "
"information. Recommended to set this larger than 0 for consistent cache "
"effects. Defaults to 10."
msgstr ""

#: of tvm.runtime.profiling.profile_function:43
msgid "prof: PackedFunc[args, Dict[str, ObjectRef]]"
msgstr ""

#: of tvm.runtime.profiling.profile_function:42
msgid ""
"PackedFunc which takes the same arguments as the `mod[func_name]` and "
"returns performance metrics as a `Dict[str, ObjectRef]` where values can "
"be `CountNode`, `DurationNode`, `PercentNode`."
msgstr ""

