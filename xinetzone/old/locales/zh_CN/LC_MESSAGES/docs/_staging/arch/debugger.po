# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the tvm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tvm doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-29 15:13+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../doc/docs/_staging/arch/debugger.rst:20
msgid "Debugger"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:22
msgid ""
"TVM Debugger is an interface for debugging TVM's computation graph "
"execution. It helps to provide access to graph structures and tensor "
"values at the TVM runtime."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:26
msgid "Debug Exchange Format"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:29
msgid "1. Computational Graph"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:30
msgid ""
"The optimized graph build by relay in json serialized format is dumped as"
" it is. This contains the whole information about the graph. The UX can "
"either use this graph directly or transform this graph to the format UX "
"can understand."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:35
msgid "The Graph JSON format is explained below"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:37
msgid ""
"1. ``nodes`` Nodes are either placeholders or computational nodes in "
"json. The nodes are stored as a list. A node contains the below "
"information"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:41
msgid ""
"``op`` - operation type, ``null`` means it is a "
"placeholder/variable/input node and``tvm_op`` means this node can be "
"executed"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:42
msgid "``name`` - Name of the node"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:43
msgid ""
"``inputs`` - Position of the inputs for this operation, Inputs is a list "
"of tuples with (nodeid, index, version). (Optional)"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:44
msgid ""
"``attrs`` - Attributes of the node which contains the following "
"information"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:46
msgid "``flatten_data`` - Whether this data need to be flattened before execution"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:47
msgid ""
"``func_name`` - Fused function name, corresponds to the symbol in the lib"
" generated by relay compilation process."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:48
msgid "``num_inputs`` - Number of inputs for this node"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:49
msgid "``num_outputs`` - Number of outputs this node produces"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:51
msgid ""
"2. ``arg_nodes`` arg_nodes is a list of indices of nodes which is "
"placeholder/variable/input or constant/param to the graph."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:54
msgid "3. ``heads`` heads is a list of entries as the output of the graph."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:57
msgid ""
"4. ``node_row_ptr`` node\\_row\\_ptr stores the history of forward path, "
"so you can skip constructing the entire graph in inference tasks."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:60
msgid ""
"5. ``attrs`` attrs can contain version numbers or similar helpful "
"information."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:63
msgid "``storage_id`` - Memory slot id for each node in the storage layout."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:64
msgid "``dtype`` - Datatype of each node (enum value)."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:65
msgid "``dltype`` - Datatype of each node in order."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:66
msgid "``shape`` - Shape of each node k order."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:67
msgid "``device_index`` - Device assignment for each entry in the graph."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:69
msgid "Example of dumped graph:"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:109
msgid "2. Tensor dumping"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:111
msgid ""
"The tensor received after execution is in ``tvm.ndarray`` type. All the "
"tensors will be saved as binary bytes in serialized format.  The result "
"binary bytes can be loaded by the API \"load_params\"."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:120
msgid "Example of loading the parameters"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:120
msgid "::"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:118
msgid "with open(path_params, \"rb\") as fi:"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:118
msgid "loaded_params = bytearray(fi.read())"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:120
msgid "module.load_params(loaded_params)"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:124
msgid "How to use Debugger?"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:126
msgid "In ``config.cmake`` set the ``USE_PROFILER`` flag to ``ON``"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:133
msgid "Do 'make' tvm, so that it will make the ``libtvm_runtime.so``"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:135
msgid ""
"In frontend script file instead of ``from tvm.contrib import "
"graph_executor`` import the ``GraphModuleDebug`` ``from "
"tvm.contrib.debugger.debug_executor import GraphModuleDebug``"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:158
msgid ""
"If network previously was exported to external library using "
"``lib.export_library(\"network.so\")``"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:157
msgid ""
"like shared object file/dynamic linked library, the initialization of "
"debug runtime will be slightly different"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:172
msgid ""
"The outputs are dumped to a temporary folder in ``/tmp`` folder or the "
"folder specified while creating the runtime."
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:177
msgid "Sample Output"
msgstr ""

#: ../../doc/docs/_staging/arch/debugger.rst:179
msgid "The below is the an example output of the debugger."
msgstr ""

