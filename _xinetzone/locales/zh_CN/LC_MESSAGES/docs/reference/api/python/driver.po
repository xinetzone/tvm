# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the TVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TVM \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-09 00:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../xin/docs/reference/api/python/driver.rst:19
msgid "tvm.driver"
msgstr ""

#: of tvm.driver:1
msgid "Namespace for driver APIs"
msgstr "driver API 的名称空间"

#: of tvm.driver.build_module.lower:1
msgid "Lowering step before build into target."
msgstr "在建立目标之前的 lowering 步骤。"

#: of tvm.driver.build_module.lower:6
msgid "inp"
msgstr ""

#: of
msgid "Union[tvm.te.schedule.Schedule, tvm.tir.PrimFunc, IRModule]"
msgstr ""

#: of tvm.driver.build_module.lower:6
msgid "The TE schedule or TensorIR PrimFunc/IRModule to be built"
msgstr "要建立的 TE 调度或 TensorIR PrimFunc/IRModule"

#: of tvm.driver.build_module.build:10 tvm.driver.build_module.lower:10
msgid "args"
msgstr ""

#: of
msgid "Optional[List[Union[tvm.tir.Buffer, tensor.Tensor, Var]]]"
msgstr ""

#: of tvm.driver.build_module.lower:9
msgid "The argument lists to the function for TE schedule."
msgstr "参数列出了用于 TE 调度的函数。"

#: of tvm.driver.build_module.lower:11
msgid "It should be None if we want to lower TensorIR."
msgstr "如果想 lower TensorIR，它应该是 None。"

#: of tvm.driver.build_module.build:28 tvm.driver.build_module.lower:13
msgid "name"
msgstr ""

#: of
msgid "str"
msgstr ""

#: of tvm.driver.build_module.lower:13
msgid "The name of the result function."
msgstr "result 函数的名称。"

#: of tvm.driver.build_module.build:32 tvm.driver.build_module.lower:18
msgid "binds"
msgstr ""

#: of
msgid "Optional[Mapping[tensor.Tensor, tvm.tir.Buffer]]"
msgstr ""

#: of tvm.driver.build_module.lower:16
msgid ""
"Dictionary that maps the Tensor to Buffer which specified the data layout"
" requirement of the function. By default, a new compact buffer is created"
" for each tensor in the argument."
msgstr "将 Tensor 映射到 Buffer 的字典，指定了函数的数据布局要求。默认情况下，为参数中的每个张量创建新的紧凑 buffer。"

#: of tvm.driver.build_module.lower:22
msgid "simple_mode"
msgstr ""

#: of
msgid "bool"
msgstr ""

#: of tvm.driver.build_module.lower:21
msgid ""
"Whether only output simple and compact statement, this will skip "
"LoopPartition, api wrapper generation and Unrolling."
msgstr "是否只输出简单和紧凑的语句，这将跳过 LoopPartition, api 包装器的生成和展开。"

#: of tvm.driver.build_module.lower:26
msgid "m"
msgstr ""

#: of
msgid "IRModule"
msgstr ""

#: of tvm.driver.build_module.lower:27
msgid "The result IRModule"
msgstr "result IRModule"

#: of tvm.driver.build_module.build:1
msgid ""
"Build a function with arguments as signature. Code will be generated for "
"devices coupled with target information."
msgstr "构建以 arguments 作为签名的函数。将为与目标信息相结合的设备生成代码。"

#: of tvm.driver.build_module.build:7
msgid "inputs"
msgstr ""

#: of
msgid ""
"Union[tvm.te.schedule.Schedule, tvm.tir.PrimFunc, IRModule, Mapping[str, "
"IRModule]]"
msgstr ""

#: of tvm.driver.build_module.build:7
msgid "The input to be built"
msgstr ""

#: of tvm.driver.build_module.build:10
msgid "The argument lists to the function."
msgstr "函数的参数列表"

#: of tvm.driver.build_module.build:13
msgid "target"
msgstr ""

#: of
msgid "Optional[Union[str, Target]]"
msgstr ""

#: of tvm.driver.build_module.build:13
msgid "The target and option of the compilation."
msgstr "编译的目标和选项。"

#: of tvm.driver.build_module.build:22
msgid "target_host"
msgstr ""

#: of tvm.driver.build_module.build:16
msgid ""
"Host compilation target, if target is device. When TVM compiles device "
"specific program such as CUDA, we also need host(CPU) side code to "
"interact with the driver setup the dimensions and parameters correctly. "
"target_host is used to specify the host side codegen target. By default, "
"llvm is used if it is enabled, otherwise a stackvm interpreter is used."
msgstr ""
"Host 编译目标，如果目标是 device。当 TVM 编译特定于设备的程序（如 CUDA）时，还需要 host(CPU) "
"端代码与驱动程序交互，正确设置 dimensions 和参数。target_host 用于指定主机端代码生成器目标。默认情况下，如果开启 "
"llvm，则使用 llvm，否则使用 stackvm 解释器。"

#: of tvm.driver.build_module.build:25
msgid "runtime"
msgstr ""

#: of
msgid "Optional[Runtime]"
msgstr ""

#: of tvm.driver.build_module.build:25
msgid "Runtime to generate artifacts for"
msgstr "生成构件的运行时"

#: of
msgid "Optional[str]"
msgstr ""

#: of tvm.driver.build_module.build:28
msgid "The name of result function."
msgstr "result 函数的名称。"

#: of tvm.driver.build_module.build:31
msgid ""
"Dictionary that maps the binding of symbolic buffer to Tensor. By "
"default, a new buffer is created for each tensor in the argument."
msgstr "将 symbolic buffer 的绑定映射到 Tensor 的字典。默认情况下，为参数中的每个张量创建新的 buffer。"

#: of tvm.driver.build_module.build:37
msgid "ret"
msgstr ""

#: of
msgid "tvm.module"
msgstr ""

#: of tvm.driver.build_module.build:37
msgid "A module that combines both host and device code."
msgstr "结合了 host 和 device 代码的模块。"

#: of tvm.driver.build_module.build:41
msgid ""
"There are two typical example uses of this function depending on the type"
" of the argument `inputs`: 1. it is an IRModule."
msgstr "根据参数 `inputs` 的类型，这个函数有两种典型的用法：1. 它是 IRModule。"

#: of tvm.driver.build_module.build:55
msgid "it is a dict of compilation target to IRModule."
msgstr "它是 IRModule 的编译 target 字典。"

#: of tvm.driver.build_module.build:72
msgid "See the note on :any:`tvm.target` on target string format."
msgstr "请参见 :any:`tvm.target` target 字符串格式。"

#~ msgid "Union[tvm.te.schedule.Schedule,"
#~ msgstr ""

#~ msgid ""
#~ "tvm.tir.PrimFunc, IRModule, Mapping[str, IRModule]]"
#~ " The input to be built"
#~ msgstr ""

