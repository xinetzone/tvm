# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the TVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TVM \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-09 00:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:20004
msgid "Deploy the Pretrained Model on Android"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:20005
msgid "**Author**: [Tomohiro Kato](https://tkat0.github.io/)"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:20007
msgid ""
"This is an example of using Relay to compile a keras model and deploy it "
"on Android device."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:40002
msgid "Setup Environment"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:40003
msgid ""
"Since there are many required packages for Android, it is recommended to "
"use the official Docker Image."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:40005
msgid "First, to build and run Docker Image, we can run the following command."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:40014
msgid ""
"You are now inside the container. The cloned TVM directory is mounted on "
"/workspace. At this time, mount the 9190 port used by RPC described "
"later."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:40020
msgid "Next we build the TVM."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:40033
msgid "After building TVM successfully, Please set PYTHONPATH."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:50002
msgid "Start RPC Tracker"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:50003
msgid "TVM uses RPC session to communicate with Android device."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:50005
msgid ""
"To start an RPC tracker, run this command in the container. The tracker "
"is required during the whole tuning process, so we need to open a new "
"terminal for this command:"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:50012
msgid "The expected output is"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:60002
msgid "Register Android device to RPC Tracker"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:60003
msgid "Now we can register our Android device to the tracker."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:60005
msgid ""
"Follow this [readme "
"page](https://github.com/apache/tvm/tree/main/apps/android_rpc) to "
"install TVM RPC APK on the android device."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:60008
msgid "Here is an example of config.mk. I enabled OpenCL and Vulkan."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:60037
msgid "for example"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:60044
msgid ""
"Next, start the Android application and enter the IP address and port of "
"RPC Tracker. Then you have already registered your device."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:60047
msgid "After registering devices, we can confirm it by querying rpc_tracker"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:60052
msgid "For example, if we have 1 Android device. the output can be"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:60063
msgid ""
"To confirm that you can communicate with Android, we can run following "
"test script. If you use OpenCL and Vulkan, please set :code:`test_opencl`"
" and :code:`test_vulkan` in the script."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:70002
msgid "Load pretrained keras model"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:70003
msgid ""
"We load a pretrained MobileNetV2(alpha=0.5) classification model provided"
" by keras."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:90002
msgid ""
"In order to test our model, here we download an image of cat and "
"transform its format."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:110002
msgid ""
"synset is used to transform the label from number of ImageNet class to "
"the word human can understand."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:130002
msgid "Compile the model with relay"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:130003
msgid ""
"If we run the example on our x86 server for demonstration, we can simply "
"set it as :code:`llvm`. If running it on the Android device, we need to "
"specify its instruction set. Set :code:`local_demo` to False if you want "
"to run this tutorial with a real device."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:150002
msgid "Deploy the Model Remotely by RPC"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:150003
msgid ""
"With RPC, you can deploy the model remotely from your host machine to the"
" remote android device."
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:170002
msgid "Execute on TVM"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:190002
msgid "Sample Output"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:190003
msgid ""
"The following is the result of 'cpu', 'opencl' and 'vulkan' using Adreno "
"530 on Snapdragon 820"
msgstr ""

#: ../../xin/docs/how_to/deploy_models/deploy_model_on_android.ipynb:190005
msgid ""
"Although we can run on a GPU, it is slower than CPU. To speed up, we need"
" to write and optimize the schedule according to the GPU architecture."
msgstr ""

#~ msgid ""
#~ ":download:`Download Python source code: "
#~ "deploy_model_on_android.py <deploy_model_on_android.py>`"
#~ msgstr ""

#~ msgid ""
#~ ":download:`Download Jupyter notebook: "
#~ "deploy_model_on_android.ipynb <deploy_model_on_android.ipynb>`"
#~ msgstr ""

#~ msgid ""
#~ "`Gallery generated by Sphinx-Gallery "
#~ "<https://sphinx-gallery.github.io>`_"
#~ msgstr ""

#~ msgid ""
#~ "deploy_model_on_android .. DO NOT EDIT. "
#~ ".. THIS FILE WAS AUTOMATICALLY GENERATED"
#~ " BY SPHINX-GALLERY. .. TO MAKE "
#~ "CHANGES, EDIT THE SOURCE PYTHON FILE:"
#~ " .. \"how_to/deploy_models/deploy_model_on_android.py\" "
#~ ".. LINE NUMBERS ARE GIVEN BELOW."
#~ msgstr ""

#~ msgid ""
#~ "Click :ref:`here "
#~ "<sphx_glr_download_how_to_deploy_models_deploy_model_on_android.py>`"
#~ " to download the full example code"
#~ msgstr ""

#~ msgid "**Author**: `Tomohiro Kato <https://tkat0.github.io/>`_"
#~ msgstr ""

#~ msgid ""
#~ "Please execute the following steps in"
#~ " the container. We can execute "
#~ ":code:`docker exec -it tvm bash` to "
#~ "open a new terminal in the "
#~ "container."
#~ msgstr ""

#~ msgid ""
#~ "Follow this `readme page "
#~ "<https://github.com/apache/tvm/tree/main/apps/android_rpc>`_ to"
#~ " install TVM RPC APK on the "
#~ "android device."
#~ msgstr ""

#~ msgid ""
#~ "At this time, don't forget to "
#~ "`create a standalone toolchain "
#~ "<https://github.com/apache/tvm/tree/main/apps/android_rpc"
#~ "#architecture-and-android-standalone-toolchain>`_"
#~ " ."
#~ msgstr ""

